1.程序的执行顺序以及各自特点。
答:顺序执行；特点:1>.顺序性； 2>.封闭性； 3>.可再现性；4>.方便,但是资源利用率低；
   并发执行；特点:1>.间断性； 2>.失去封闭性； 3>.不可再现性;  4>.资源利用率得到提升。
   
2.由最早的单道批处理到后来的多道处理系统，推动操作系统发展的是对OS的资源利用率和系统吞吐量的追求。
由于并发执行的三个特点,决定了普通程序不可直接运行。从而提出了进程的概念。

3.进程是什么?为什么要引入进程?进程的特征以及进程的状态转换是什么？
答:<1>.进程：进程实体的运行过程,是系统进行资源分配和调度的一个独立单位。
    2>.引入进程原因：避免并发执行的三个状态,使参与并发的每个程序都能够独立的运行。
    3>.进程特征：动态性:最基本状态,程序是静态的,而进程是动态的。
                并发性:无PCB不可参与并发运行。
                独立性:无PCB不可作为独立单位运行。
                异步:相对于单道处理中的顺序执行中的同步而言。
    4>.基本三状态:就绪 + 执行 + 阻塞。为了性能和管理又引入两个状态:创建状态和终止状态。
    5>.状态转换:I/O请求和各种原语的作用加上系统活动之间为了更好的完成作业要求而做出的一系列动作。
    
4.PCB是什么？为什么要引入PCB？PCB中的信息又有什么?
答:<1>.PCB:进程控制块,OS用于管理进程的进程表,用来描述进程的情况以及管理进程的信息。 本质:记录型数据结构的结构体。
    2>.原因与作用:便于使用和管理,从而简化操作; 对共享资源的组织和维护。
    3>.信息:  进程标识符:唯一标识某一进程； 实质就是句柄也就是指针。
              处理机状态:各种寄存器的内容以及各种指针； 
              进程调度信息:进程状态和有关进程调度的信息。
              进程控制信息:用于控制的所有必要信息。
         
         
5.进程同步问题产生的原因？
答:产生的原因:并发执行条件下进程的不确定性,最根本原因:资源抢夺。
   资源分类:
      临界资源：被进程采取互斥访问实现对资源的共享资源称为临界资源。
      临界区域：每个进程中访问临界资源的那段代码成为临界区。
   同步机制遵循的规则：1>.空闲让进:有效利用临界资源。
                     2>.忙则等待:保证各进程对临界资源的互斥访问。
                     3>.有限等待:避免陷入死等状态。
                     4>.让权等待:避免陷入忙等状态。
   进程同步工具:
      信号量:
          1>.整型信号量:P,V的两个原子操作。不可打断。   缺点:P原子操作只要信号量<=0，不断执行S--,未遵循让权等待,造成了忙等状态。
          2>.记录型信号量:采取了记录型的数据结构而得名。<0的时候自我阻塞,遵循了让全等待。
          3>.AND型信号量:针对多个进程不再共享仅仅一个资源的信号量。
              运行思想:将进程运行所需所有资源一次性分配于进程,进程使用完后一起释放.
          4>.信号量集:资源的需求量不再以1为单位,而是以N为单位。
         缺点:自备PV操作,管理麻烦,容易因为操作不当而导致系统死锁。
      管程机制:共享资源以及对其操作所组成的资源管理程序组成了资源管理模块,成为管程。
         定义:一个管程定义了一个数据结构和能为并发的一组操作,这组操作可同步进程和改变管程中的数据。,是一种面向对象的思想。
         
         
 6.线程是什么?进程与线程的区别是什么？为什么要引入线程？
 答: 并发执行时的时空开销: 创建线程时 + 撤销进程 + 进程切换 都会影响OS的性能 
     引入线程原因:解决并发执行时候所付出的时空开销,使OS具有更好的并发性,用来改善OS性能。
     线程:轻量级进程。进程如果是一个程序的运行,则线程就是程序中负责某一功能的一个小进程。多个小进程组成一个进程的运行。
     区别:调度的基本单位的切换 + 并发性的同时存在 + 拥有资源的种类 + 独立性的高低 + 系统开销的花费+ 在多处理机上的启动
              
